html
    script(src='/bedelos/scripts/jquery-2.1.4.min.js')
    script(type='text/javascript', src='/bedelos/lib/xlsx/dist/xlsx.full.min.js')
    script(type='text/javascript', src='/bedelos/lib/Blob/Blob.js')
    script(type='text/javascript', src='/bedelos/lib/lodash/lodash.js')
    script(type='text/javascript', src='/bedelos/lib/file-saver/FileSaver.js')
    body
        input(id="liga", type='hidden', value=liga, style='visibility:hidden')
        input(id="saison", type='hidden', value=saison, style='visibility:hidden')
        input(id="ranking", type='hidden', value=ranking, style='visibility:hidden')
    script.
        function datenum(v, date1904) {
            if(date1904) v+=1462;
            var epoch = Date.parse(v);
            return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);
        }
        function sheet_from_array_of_arrays(data, opts) {
            var ws = {};
            var range = {s: {c:10000000, r:10000000}, e: {c:0, r:0 }};
            for(var R = 0; R != data.length; ++R) {
                for(var C = 0; C != data[R].length; ++C) {
                    if(range.s.r > R) range.s.r = R;
                    if(range.s.c > C) range.s.c = C;
                    if(range.e.r < R) range.e.r = R;
                    if(range.e.c < C) range.e.c = C;
                    var cell = {v: data[R][C] };
                    if(cell.v == null) continue;
                    var cell_ref = XLSX.utils.encode_cell({c:C,r:R});
                    if(typeof cell.v === 'number') cell.t = 'n';
                    else if(typeof cell.v === 'boolean') cell.t = 'b';
                    else if(cell.v instanceof Date) {
                        cell.t = 'n'; cell.z = XLSX.SSF._table[14];
                        cell.v = datenum(cell.v);
                    }
                    else cell.t = 's';
                    ws[cell_ref] = cell;
                }
            }
            if(range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);
            return ws;
        }
        /* original data */
        var ws_name = $('#liga').val();
        var saison = $('#saison').val();

        var data = [[`Statistiken für Liga: "${ws_name}"`], ["3:0", "3:1", "3:2", "2:3", "1:3", "0:3", "HF", "SL", "MAX", "Name", "Team", "Pkt ∑"]];

        var sRanking = $('#ranking').val();
        var ranking = JSON.parse(sRanking);
        ranking.forEach(rank => {
            data.push(_.toArray(rank))
        });

        function Workbook() {
            if(!(this instanceof Workbook)) return new Workbook();
            this.SheetNames = [];
            this.Sheets = {};
        }
        var wb = new Workbook(), ws = sheet_from_array_of_arrays(data);
        /* add worksheet to workbook */
        wb.SheetNames.push(ws_name);
        wb.Sheets[ws_name] = ws;
        var wbout = XLSX.write(wb, {bookType:'xlsx', bookSST:true, type: 'binary'});
        function s2ab(s) {
            var buf = new ArrayBuffer(s.length);
            var view = new Uint8Array(buf);
            for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
            return buf;
        }
        saveAs(
            new Blob(
                [s2ab(wbout)],
                {type:"application/octet-stream"}
            ),
            `Statistik_${ws_name}_Saison_${saison}.xlsx`
        )
        window.history.back();
